import{_ as n,r as d,o as s,c as a,a as l,d as i,b as t,e as c}from"./app-2b2b30d0.js";const r={},p=c(`<nav class="table-of-contents"><ul></ul></nav><h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h1><p>ptp 是一个简单的内网穿透工具</p><p>该工具的目标有两个</p><ul><li><p>第一个目标：让右侧的 User 能访问到 Client 的本地服务</p></li><li><p>第二个目标：让 ClientA 和 Client B 可以相互通信</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>                                   or single tunnel 
                                       |             
                            Server     |           |------------------|
                            |-------tunnel-&gt;-------|                  |                        
                            |                      | local.test       |                        +---------+
                            |  +--dynamic tunnel-&lt;-|                  |---------&lt;--------------|   User  |
                            |  |                   | 192.168.1.1:3000 |                        |---------+
                            |  |                   | www.domain.com   |       
                            |  |                   |------------------|
                            |  |
    +---------------&gt;-------+------&lt;------------------------+  
    |                       |                               |    
    |                    register                           |           
    |                       |                               |                                          
    |                       |                               |  
 +--------------------------+--------------------------------------------------+                          +--------------+
 |Client A local.test  |  Client B 192.168.1.1:3000 |  Client C www.domain.com |-----------------&gt;--------| local service|
 +-----------------------------------------------------------------------------+                          +--------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了实现上方的目标，需要一台具有公网ip的服务器，作为沟通的桥梁。沟通的协议可以是：</p>`,7),v=l("code",null,"Dynamic Tunnel",-1),u=l("p",null,"ClientA 有 两种方式可以到达ClientB",-1),m=l("div",{class:"custom-container warning"},[l("p",{class:"custom-container-title"},"WARNING"),l("p",null,"方式2 仅对传输过程中的流量进行加密，不会对应用的自身的header加密")],-1);function o(x,b){const e=d("Badge");return s(),a("div",null,[p,l("ul",null,[l("li",null,[l("p",null,[i("Client->Server 的 Tunnel 协议可以是 "),t(e,{type:"tip",text:"udp",vertical:"middle"}),t(e,{type:"tip",text:"tcp",vertical:"middle"}),t(e,{type:"tip",text:"tls",vertical:"middle"}),t(e,{type:"tip",text:"wss",vertical:"middle"}),t(e,{type:"tip",text:"ws",vertical:"middle"}),t(e,{type:"tip",text:"p2p",vertical:"middle"})])]),l("li",null,[l("p",null,[i("User->Server 的协议可以是 "),t(e,{type:"tip",text:"udp",vertical:"middle"}),t(e,{type:"tip",text:"tcp",vertical:"middle"}),t(e,{type:"tip",text:"tls",vertical:"middle"}),t(e,{type:"tip",text:"wss",vertical:"middle"}),t(e,{type:"tip",text:"ws",vertical:"middle"}),t(e,{type:"tip",text:"https",vertical:"middle"}),t(e,{type:"tip",text:"http",vertical:"middle"})])]),l("li",null,[l("p",null,[i("User->Server->Client 的 "),v,i(" 的协议可以是 "),t(e,{type:"tip",text:"udp",vertical:"middle"}),t(e,{type:"tip",text:"tcp",vertical:"middle"}),t(e,{type:"tip",text:"tls",vertical:"middle"}),t(e,{type:"tip",text:"wss",vertical:"middle"}),t(e,{type:"tip",text:"ws",vertical:"middle"})])]),l("li",null,[u,l("ul",null,[l("li",null,[l("p",null,[i("方式1: ClientA->Server->ClientB 可通过"),t(e,{type:"tip",text:"tls",vertical:"middle"}),i("加密传输")])]),l("li",null,[l("p",null,[i("方式2: ClientA 和 ClientB 通过Server 打孔成功后。ClientA<->ClientB 可以通过"),t(e,{type:"tip",text:"udp",vertical:"middle"}),i("或"),t(e,{type:"tip",text:"tcp",vertical:"middle"}),i("协议互通。（取决于是否打孔成功）")])])]),m])])])}const _=n(r,[["render",o],["__file","index.html.vue"]]);export{_ as default};
