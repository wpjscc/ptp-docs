import{_ as n,r as d,o as s,c,a as e,d as i,b as l,e as a}from"./app-94b8f45f.js";const p={},r=a(`<h1 id="架构" tabindex="-1"><a class="header-anchor" href="#架构" aria-hidden="true">#</a> 架构</h1><p>该工具的目标有两个</p><ul><li><p>第一个目标：为了让右侧的 User 能访问到 Client 的本地服务</p></li><li><p>第二个目标：让 ClientA 和 Client B 可相互通信</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>                                   or single tunnel 
                                       |             
                            Server     |           |------------------|
                            |-------tunnel-&gt;-------|                  |                        
                            |                      | local.test       |                        +---------+
                            |  +--dynamic tunnel-&lt;-|                  |---------&lt;--------------|   User  |
                            |  |                   | 192.168.1.1:3000 |                        |---------+
                            |  |                   | www.domain.com   |       
                            |  |                   |------------------|
                            |  |
    +---------------&gt;-------+------&lt;------------------------+  
    |                       |                               |    
    |                    register                           |           
    |                       |                               |                                          
    |                       |                               |  
 +--------------------------+--------------------------------------------------+                            +-----------+
 |Client A local.test  |  Client B 192.168.1.1:3000 |  Client C www.domain.com |----------------------------| local host|
 +-----------------------------------------------------------------------------+                            +-----------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了实现上方的目标，需要一台具有公网ip的服务器，作为沟通的桥梁。沟通的协议可以是：</p>`,5),v=e("p",null,"ClientA 有 两种方式可以到达ClientB",-1),u=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"WARNING"),e("p",null,"方式2 目前是明文传输的，没有加密")],-1),m={class:"custom-container tip"},o=e("p",{class:"custom-container-title"},"TIP",-1),x=e("p",null,"访问对方的方式有",-1),_=e("ul",null,[e("li",null,"本地虚拟域名或内网ip"),e("li",null,"公网域名或公网ip")],-1),y=e("p",null,"后面会详细介绍如何访问到对方",-1);function b(h,C){const t=d("Badge");return s(),c("div",null,[r,e("ul",null,[e("li",null,[e("p",null,[i("Client->Server 的 Tunnel 协议可以是 "),l(t,{type:"tip",text:"udp",vertical:"middle"}),l(t,{type:"tip",text:"tcp",vertical:"middle"}),l(t,{type:"tip",text:"tls",vertical:"middle"}),l(t,{type:"tip",text:"wss",vertical:"middle"}),l(t,{type:"tip",text:"ws",vertical:"middle"}),l(t,{type:"tip",text:"p2p",vertical:"middle"})])]),e("li",null,[e("p",null,[i("User->Server 的协议可以是 "),l(t,{type:"tip",text:"udp",vertical:"middle"}),l(t,{type:"tip",text:"tcp",vertical:"middle"}),l(t,{type:"tip",text:"tls",vertical:"middle"}),l(t,{type:"tip",text:"wss",vertical:"middle"}),l(t,{type:"tip",text:"ws",vertical:"middle"}),l(t,{type:"tip",text:"https",vertical:"middle"}),l(t,{type:"tip",text:"http",vertical:"middle"})])]),e("li",null,[e("p",null,[i("User->Server->Client 的 Dynamic Tunnel 的协议可以是 "),l(t,{type:"tip",text:"udp",vertical:"middle"}),l(t,{type:"tip",text:"tcp",vertical:"middle"}),l(t,{type:"tip",text:"tls",vertical:"middle"}),l(t,{type:"tip",text:"wss",vertical:"middle"}),l(t,{type:"tip",text:"ws",vertical:"middle"})])]),e("li",null,[v,e("ul",null,[e("li",null,[e("p",null,[i("方式1: ClientA->Server->ClientB 可通过"),l(t,{type:"tip",text:"tls",vertical:"middle"}),i("加密传输")])]),e("li",null,[e("p",null,[i("方式2: ClientA 和 ClientB 通过Server 打孔成功后。ClientA<->ClientB 可以通过"),l(t,{type:"tip",text:"udp",vertical:"middle"}),i("或"),l(t,{type:"tip",text:"tcp",vertical:"middle"}),i("协议互通。（取决于是否打孔成功）")])])]),u])]),e("div",m,[o,e("p",null,[i("只要两端是"),l(t,{type:"tip",text:"相通",vertical:"middle"}),i("的，都可访问到对方的在"),l(t,{type:"tip",text:"udp",vertical:"middle"}),i("和"),l(t,{type:"tip",text:"tcp",vertical:"middle"}),i("上服务，像访问本地服务一样。")]),x,_,y])])}const g=n(p,[["render",b],["__file","concepts.html.vue"]]);export{g as default};
